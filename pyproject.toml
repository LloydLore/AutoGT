[project]
name = "autogt"
version = "0.1.0"
description = "AutoGT TARA Platform - Automotive Cybersecurity Threat Analysis and Risk Assessment"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "autogen-agentchat>=0.7.4",
    "autogen-ext[openai]>=0.7.4",
    "sqlalchemy>=2.0.0",
    "fastapi>=0.100.0",
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "alembic>=1.12.0",
    "uvicorn>=0.20.0",
    "python-multipart>=0.0.6",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "coverage>=7.0.0",
]

[project.scripts]
autogt = "autogt.cli.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src/autogt"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"
markers = [
    "contract: Contract tests that validate API/CLI interfaces",
    "integration: Integration tests that test complete workflows",
    "unit: Unit tests for individual components",
    "slow: Tests that take more than a few seconds to run",
]

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"] # allow assert statements in tests

[tool.black]
line-length = 88
target-version = ["py312"]
